/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Nest React RBAC API
 * OpenAPI spec version: 1.0
 */
import { z as zod } from "zod";

export const usersControllerCreateBody = zod.object({
	name: zod.string(),
	email: zod.string(),
	password: zod.string(),
	tenantId: zod.string(),
});

export const usersControllerFindAllResponseItem = zod.object({
	id: zod.string(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime(),
	createdBy: zod.string().nullable(),
	updatedBy: zod.string().nullable(),
	name: zod.string(),
	email: zod.string(),
});
export const usersControllerFindAllResponse = zod.array(usersControllerFindAllResponseItem);

export const usersControllerFindMeResponse = zod.object({
	id: zod.string(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime(),
	createdBy: zod.string().nullable(),
	updatedBy: zod.string().nullable(),
	name: zod.string(),
	email: zod.string(),
	tenants: zod
		.array(
			zod.object({
				id: zod.string(),
				createdAt: zod.string().datetime(),
				updatedAt: zod.string().datetime(),
				createdBy: zod.string().nullable(),
				updatedBy: zod.string().nullable(),
				tenant: zod
					.object({
						id: zod.string(),
						createdAt: zod.string().datetime(),
						updatedAt: zod.string().datetime(),
						createdBy: zod.string().nullable(),
						updatedBy: zod.string().nullable(),
						name: zod.string(),
						slug: zod.string(),
					})
					.optional(),
				tenantId: zod.string(),
				user: zod.any().optional(),
				userId: zod.string(),
			}),
		)
		.optional(),
});

export const usersControllerFindOneParams = zod.object({
	id: zod.string(),
});

export const usersControllerFindOneResponse = zod.object({
	id: zod.string(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime(),
	createdBy: zod.string().nullable(),
	updatedBy: zod.string().nullable(),
	name: zod.string(),
	email: zod.string(),
});

export const usersControllerUpdateParams = zod.object({
	id: zod.string(),
});

export const usersControllerUpdateBody = zod.object({
	name: zod.string().optional(),
	email: zod.string().optional(),
});

export const usersControllerUpdateResponse = zod
	.object({
		message: zod.string(),
	})
	.and(
		zod.object({
			result: zod
				.object({
					id: zod.string(),
					createdAt: zod.string().datetime(),
					updatedAt: zod.string().datetime(),
					createdBy: zod.string().nullable(),
					updatedBy: zod.string().nullable(),
					name: zod.string(),
					email: zod.string(),
				})
				.optional(),
		}),
	);

export const usersControllerRemoveParams = zod.object({
	id: zod.string(),
});

export const usersControllerRemoveResponse = zod.object({
	message: zod.string(),
});
