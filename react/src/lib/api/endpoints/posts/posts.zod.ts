/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Nest React RBAC API
 * OpenAPI spec version: 1.0
 */
import { z as zod } from "zod";

export const postsControllerCreateBody = zod.object({
	title: zod.string(),
	content: zod.string(),
	authorId: zod.string(),
});

export const postsControllerIndAllResponseItem = zod.object({
	id: zod.string(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime(),
	createdBy: zod.string().nullable(),
	updatedBy: zod.string().nullable(),
	title: zod.string(),
	content: zod.string(),
	published: zod.boolean(),
	authorId: zod.string(),
});
export const postsControllerIndAllResponse = zod.array(postsControllerIndAllResponseItem);

export const postsControllerFindOneParams = zod.object({
	id: zod.string(),
});

export const postsControllerFindOneResponse = zod.object({
	id: zod.string(),
	createdAt: zod.string().datetime(),
	updatedAt: zod.string().datetime(),
	createdBy: zod.string().nullable(),
	updatedBy: zod.string().nullable(),
	title: zod.string(),
	content: zod.string(),
	published: zod.boolean(),
	authorId: zod.string(),
});

export const postsControllerUpdateParams = zod.object({
	id: zod.string(),
});

export const postsControllerUpdateBody = zod.object({
	title: zod.string().optional(),
	content: zod.string().optional(),
	authorId: zod.string().optional(),
});

export const postsControllerUpdateResponse = zod
	.object({
		message: zod.string(),
	})
	.and(
		zod.object({
			result: zod
				.object({
					id: zod.string(),
					createdAt: zod.string().datetime(),
					updatedAt: zod.string().datetime(),
					createdBy: zod.string().nullable(),
					updatedBy: zod.string().nullable(),
					title: zod.string(),
					content: zod.string(),
					published: zod.boolean(),
					authorId: zod.string(),
				})
				.optional(),
		}),
	);

export const postsControllerRemoveParams = zod.object({
	id: zod.string(),
});

export const postsControllerRemoveResponse = zod.object({
	message: zod.string(),
});
